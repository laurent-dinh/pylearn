!obj:pylearn2.train.Train {
  dataset: !obj:pylearn2.sandbox.nlp.datasets.word2vec.Word2Vec {
    which_set: 'train',
  },
  model: !obj:pylearn2.models.mlp.MLP {
    input_space: !obj:pylearn2.sandbox.rnn.space.SequenceSpace {
      space: !obj:pylearn2.space.IndexSpace {
        dim: 1,
        max_labels: 101,
      },
    },
    layers: [
      !obj:pylearn2.sandbox.nlp.models.mlp.ProjectionLayer {
        layer_name: 'projection_layer',
        dim: 300,
        irange: 0.01,
      },
      !obj:pylearn2.sandbox.rnn.models.rnn.Recurrent {
        layer_name: 'recurrent_layer',
        dim: 500,
        irange: 0.01,
      },
      !obj:pylearn2.models.mlp.Linear {
        layer_name: 'linear_layer',
        dim: 300,
        irange: 0.01,
      }
    ],
  },
  algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
    learning_rate: 0.1,
    batch_size: 32,
    monitoring_dataset: {
      valid: !obj:pylearn2.sandbox.nlp.datasets.word2vec.Word2Vec {
        which_set: 'valid',
      },
    },
    cost: !obj:pylearn2.sandbox.rnn.costs.gradient_clipping.GradientClipping {
      clipping_value: 1,
      cost: !obj:pylearn2.costs.mlp.Default {}
    }
  },
}
